app.title=Calories management
app.stackTitle=Application stack:
app.description=<a href="https://github.com/grigorievfinance/traderdiary">Java Enterprise project</a> with registration/authorization and role-based access rights (USER, ADMIN). \
Admin could create/edit/delete users, users - manage your profile and data (positions) via UI (AJAX) and REST with basic authorization. \
Positions could be filtered by date and time. Position record color depends on the balance sum exceeding "Profit/Loss limit" (editable user's profile paramets). \
All REST interface covered with JUnit tests by Spring MVC Test and Spring Security Test.
app.footer=Internship <a href="https://github.com/grigorievfinance/traderdiary" target=_blank>Spring 5/JPA Enterprise (TraderDiary)</a> internship application
app.login=Login as
app.profile=profile

user.title=Users
user.edit=Edit user
user.add=Add user
user.name=Name
user.email=Email
user.roles=Roles
user.active=Active
user.registered=Registered
user.password=Password
user.profitLoss=Daily loss limit

position.title=Positions
position.edit=Edit position
position.add=Add position
position.filter=Filter
position.startDate=From date (inclusive)
position.endDate=To date (inclusive)
position.startTime=From time (inclusive)
position.endTime=To time (exclusive)
position.description=Description
position.dateTime=Date/Time
position.profitLoss=Profit

common.add=Add
common.select=Select
common.deleted=Record deleted
common.saved=Record saved
common.enabled=Record enabled
common.disabled=Record disabled
common.errorStatus=Error status
common.confirm=Are you sure?
common.save=Save
common.cancel=Cancel